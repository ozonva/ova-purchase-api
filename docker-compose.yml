version: '3.1'
services:
  purchase-db:
    image: postgres
    networks:
      - ova-purchase-api-network
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=purchases
    ports:
      - "5432:5432"

#  purchase-app:
#    build: .
#    depends_on:
#      - db
#    links:
#      - db
#    ports:
#      - "8080:8080"
  jaeger:
    image: jaegertracing/all-in-one
    restart: unless-stopped
    networks:
      - ova-purchase-api-network
    ports:
      - "6831:6831"
      - "16686:16686"


  zookeeper:
    image: 'bitnami/zookeeper:latest'
    restart: unless-stopped
    networks:
      - ova-purchase-api-network
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    restart: unless-stopped
    depends_on:
      - zookeeper
    networks:
      - ova-purchase-api-network
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes

  kafka-ui:
    image: 'provectuslabs/kafka-ui:latest'
    restart: unless-stopped
    depends_on:
      - kafka
    networks:
      - ova-purchase-api-network
    ports:
      - "8082:8082"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - SERVER_PORT=8082
#
#  prometheus:
#    image: prom/prometheus:latest
#    restart: unless-stopped
#    depends_on:
#      - ova-conference-api
#    networks:
#      - ova-purchase-api-network
#    volumes:
#      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
#    ports:
#      - "9090:9090"


networks:
  ova-purchase-api-network:
    driver: bridge
